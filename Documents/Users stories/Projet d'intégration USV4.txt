User Stories :

* US01 : inscription

En tant qu’utilisateur, je souhaite pouvoir m’inscrire, afin de pouvoir me créer un compte et d'accéder aux fonctionnalités du site web.

Description : 
L’inscription devrait se faire à partir d’un bouton présent sur le site web, il doit rediriger les utilisateurs à une page d’inscription présentant un formulaire où ils pourront rentrer des informations à leur sujet.
Par exemple : nom, prénom, adresse mail, téléphone, mot de passe ainsi qu’une confirmation du mot de passe pour être sûr de ne pas s’être trompé précédemment.
L’adresse mail et le numéro de téléphone sont unique donc si l'un d'eux est déjà présent dans la base de données, l'inscription sera refusée. 
Si le formulaire n’est pas rempli, le bouton d’envoi n’est pas cliquable. 
En cas de problème au niveau de la complétion du formulaire, le site web affichera un pop-up contenant un message d’erreur.
Lors de l’envoi, un pop-up avec le message « inscription complété. » et lorsque le bouton ‘ok’ du pop-up est cliqué, la page se refresh 

La méthode utilisé lors de l’inscription est la méthode post Inscription venant de l’API. Cette API demande à l’utilisateur de rentrer les informations suivantes : nom, prénom, téléphone, mail et mot de passe. 

(François Temmerman). 

* US01 Bis : inscription (mobile)

En tant qu’utilisateur, je souhaite pouvoir m’inscrire afin de pouvoir créer mon compte et d’avoir accès aux différentes fonctionnalités de l’application mobile.

Description : 
L’inscription devrait se faire à partir d’un bouton présent sur l’application mobile, il doit rediriger les utilisateurs à une page d’inscription présentant un formulaire où ils pourront rentrer des informations à leur sujet.
Par exemple : nom, prénom, adresse mail, téléphone, mot de passe ainsi qu’une confirmation du mot de passe pour être sûr de ne pas s’être trompé précédemment.
L’adresse mail et le numéro de téléphone sont unique donc si l'un d'eux est déjà présent dans la base de données, l'inscription sera refusée. 
Si le formulaire n’est pas rempli, le bouton d’envoi est cliquable, mais un message d’erreur « saisie incorrecte » apparaitra au-dessus du bouton. 
En cas de problème au niveau de la complétion du formulaire, le site web affichera un message d’erreur « saisie incorrecte ».

La méthode utilisé lors de l’inscription est la méthode post Inscription venant de l’API. Cette API demande à l’utilisateur de rentrer les informations suivantes : nom, prénom, téléphone, mail et mot de passe. 



* US02 : connexion (web)

En tant qu’utilisateur, je souhaite pouvoir me connecter au site web, afin d’avoir accès à mon compte et de pouvoir commencer à utiliser le site.

Description : 
La connexion devrait se faire à partir d’un bouton présent sur le site web, il doit rediriger les utilisateurs à une page de connexion présentant un formulaire où ils pourront rentrer leur adresse mail et leur mot de passe afin de pouvoir avoir accès à leur compte.
Si l’un des champs n’est pas complet, le bouton de connexion n’est pas cliquable.
Si l’adresse mail n’est pas connue, le site affiche un pop-up avec l’information « mail inexistant vous devez créer un compte. ». 
Si l’adresse est correcte, mais que le mot de passe est incorrect, le site affiche un pop-up avec l’information « mot de passe incorrect. ». 
Lors de l’envoi, un pop-up s’affiche avec le message « connexion… » lorsque le bouton ‘ok’ du pop-up est cliqué, la page se resfresh et un bouton de déconnexion apparait.  

La méthode utilisé lors de la connexion est la méthode GET mailExist de venant de l’API. Cette API va rechercher toutes les informations d’un utilisateur en fonction du mail envoyé. 


* US02 bis : connexion (mobile)

En tant qu’utilisateur, je souhaite pouvoir me connecter à l’application mobile, afin d’avoir accès à mon compte et de pouvoir commencer à utiliser le site.

Description : 
La connexion devrait se faire à partir d’un bouton présent sur l’application mobile, il doit rediriger les utilisateurs à une page de connexion présentant un formulaire où ils pourront rentrer leur adresse mail et leur mot de passe afin de pouvoir avoir accès à leur compte.
Si l’un des champs n’est pas complet, le bouton de connexion est cliquable, mais un message d’erreur apparaîtra « saisie incorrect ».
Si l’adresse mail n’est pas connue, l’application affiche un message avec l’information « mail inconnu ». 
Si l’adresse est correcte, mais que le mot de passe est incorrect, l’application affiche un pop-up avec l’information « mot de passe incorrect. ».  

La méthode utilisé lors de la connexion est la méthode GET mailExist de venant de l’API. Cette API va rechercher toutes les informations d’un utilisateur en fonction du mail envoyé
(Simon Magnes)








* US03 : Demande d’aide (web)

En tant qu’utilisateur, je souhaite pouvoir formuler une demande, afin de recevoir l’aide d’une personne utilisant le site web. 

Description : 
La demande d’aide devrait se faire à partir d’un bouton présent sur le site web, il doit rediriger les utilisateurs à une page présentant un formulaire dans lequel l’utilisateur peut écrire des informations concernant leur demande à savoir nom de tâche, description, catégorie de la tâche, le code postal du lieu dans lequel la tâche a été demandé.
Si l’un des champs n’est pas rempli, le bouton n’est pas cliquable. 
Lors de l’envoi aucun pop-up, la tâche est envoyée directement dans la base de données.

La méthode utilisée pour l’inscription des demandes est la méthode POST demande venant de l’API. Cette API demande à l’utilisateur de rentrer les informations suivantes : titre de la demande, description de la demande, 



(Luk Brian)

* US03 Bis : demande d’aide (mobile)

En tant qu’utilisateur, je souhaite pouvoir formuler une demande, afin de recevoir l’aide d’une personne utilisant l’application. 
Description : 
La demande d’aide devrait se faire à partir d’un bouton présent sur l’application mobile et le site web, il doit rediriger les utilisateurs à une page présentant un formulaire dans lequel l’utilisateur peut écrire des informations concernant leur demande (nom de tâche, description, catégorie de la tâche,).

* US04 :

En tant qu’utilisateur, je souhaite avoir un affichage contenant une liste des demandes faites par les autres utilisateurs, afin de pouvoir entreprendre les démarches pour pouvoir les aider.


Description :
L’affichage en question ne doit pas contenir toutes les demandes en une seule page, cela ralentirait l’affichage du au nombre conséquent de demandes attendues par le client. 
Cet affichage doit se faire sous la forme de block contenant les informations de la demande.

* US04.1 :

En tant qu’utilisateur, je souhaite pouvoir recevoir plus d’information au sujet d’une demande dans la liste de demande d’aide, afin d’avoir une idée concrète de la tâche à accomplir ou encore de pouvoir entrer en communication avec l’utilisateur.

Description :
Lors de l’affichage de la liste des demandes d’aide, chaque demande sera cliquable pour réunir plus d’information sur la demande. 
Un bouton devrait aussi permettre de mettre en contact via le chat l’aidant et l’aidé.  

* US04.2 :
En tant qu’utilisateur, je souhaite pouvoir trier les demandes d’aide, afin de pouvoir plus facilement choisir parmi les demandes celles que je peux accomplir. 
Description :
Ce tri doit se faire sous plusieurs critères soit par catégorie de demande, soit la localisation ou soit la compensation ou non (sous forme de rémunération ou autres, les utilisateurs peuvent en parler entre eux) de la tâche.  
(Gaëtan Gortz)

* US05.1 :
En temps qu’utilisateur, je souhaite pouvoir entrer en communication avec la personne que j’aide/ qui m’aide, afin de pouvoir discuter avec lui de ses disponibilités, de la compensation ou encore de pouvoir communiquer plus précisément mon adresse.
Description :
L’utilisateur doit pouvoir entrer en contact avec un autre utilisateur par le biais d’un chat de communication écrit.

* US05.2 :
En tant qu’utilisateur, je souhaite pouvoir discuter avec la personne qui m’aide/ que j’aide par le biais de message ou d’appel vocaux ou vidéo, afin de me faire une idée plus concrète de qui est la personne que j’aide/ qui m’aide.

Description :
L’idée ici est de faire en sorte que dans le chat, il y ait moyen d’envoyer des messages vocaux et de passer des appels vocaux/vidéo. 

* US06 : 
En tant qu’utilisateur, je souhaite pouvoir modifier ma page de profil, afin de remplir/changer des informations complémentaires à mon sujet. 
Description :
Les utilisateurs doivent être capable de modifier leur profil lorsqu’ils sont connectés à leur compte, ils pourront modifier leur information à propos de leur mot de passe. (Le reste est à voir ensembe).  

* US07 : 
En tant qu’utilisateur, je souhaite avec son accord obtenir des informations plus précises au sujet de la localisation de la personne que j’aide afin de pouvoir me rendre plus facilement au lieu de rendez-vous.
Description :
Les utilisateurs doivent avoir accès à une information de géolocalisation et un guidage GPS doit pouvoir se lancer lorsque la personne qui aide veut pouvoir se rendre chez la personne qu’il/elle aide. 
(Maxime De Cock)

* US08 : 

En tant qu’utilisateur, je souhaite pouvoir conclure une demande lorsque la personne qui m’a aidé à fini la tâche, afin que cette tâche n’apparaisse dans les tâches en cours de l’utilisateur.

Description :
L’utilisateur doit-être capable de stopper la tâche qu’il a donné à un autre utilisateur lorsque celle-ci est finie. 

* US09 : 

En tant qu’utilisateur, je souhaite pouvoir accepter une demande formulée par un autre utilisateur, afin de commencer à aider mon prochain.

Description :
Lorsque l’utilisateur est en train de parcourir la liste de demande, l’utilisateur peut entrer dans les détails d’une demande et accepter la demande dans cette page 


* US10 :

En tant qu’utilisateur, je souhaite pouvoir signaler un autre utilisateur, afin de prévenir un abus ou un acte inapproprié.

Description :
L’utilisateur doit pouvoir envoyer un signalement aux administrateurs avec un description de la raison du signalement. 
Après coup, les administrateurs décideront de bannir ou bloquer l’utilisateur en question 
En cas de signalement abusif l’utilisateur pourrait voir son compte supprimé ou bloqué.
(Thomas Namurois) 

* US09.1 :

En tant qu'utilisateur, je souhaite pouvoir signaler un utilisateur en un clic afin de dénoncer plus facilement un acte abusif.

Description :
L’accès à la signalisation doit se faire en un clic sur un bouton « signaliser »

* US09.2 : 

En tant qu'utilisateur, je souhaite pouvoir décrire l'acte abusive ou/et comportement d'un utilisateur.

Description :
La description de la signalisation peut se faire dans un écran pop-ups 

* US10 :

En tant qu’utilisateur, je souhaite que lorsque je décide d’aider quelqu’un, je puisse afficher les demandes que j’ai accepté dans une liste, afin de savoir quelles tâches il me reste à accomplir.

Description :
Tout comme la liste de demande, l’utilisateur doit-être capable de voir celle(s) qu’il a acceptée(s), l’affichage sera le même que l’affichage de la liste de demande, avec l’accès à détails si l’utilisateur qui veut aider à oublié la tâche qu’il avait au préalable accepté. 




* US11 :

En tant qu’utilisateur, je souhaite pouvoir noter la personne qui m’a aidé lorsque je conclu la tâche, afin de pouvoir valoriser son travail aux autres utilisateurs.

Description :
Lorsque l’utilisateur arrête la tâche il faut qu’un pop-up ou un message apparaisse afin de pouvoir noter la personne qui l’a aidé. 

* US12 :

En tant qu’utilisateur, je souhaite avoir un page ou je pourrais contacter les administrateurs, afin de les prévenir si je rencontre un problème ou un bug. 
Description :
À la simple pression d’un bouton l’utilisateur doit pouvoir se rendre sur une page nommé « page de contact » et en rentrant des informations de type adresse mail, nom, Prénom ainsi qu’une description du problème rencontré, doit pouvoir envoyer un mail à l’équipe. 


